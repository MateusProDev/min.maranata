{"version":3,"file":"index.es.js","sources":["../src/history.ts","../src/history-editor.ts","../src/with-history.ts"],"sourcesContent":["import { isPlainObject } from 'is-plain-object'\nimport { Operation, Range } from 'slate'\n\ninterface Batch {\n  operations: Operation[]\n  selectionBefore: Range | null\n}\n\n/**\n * `History` objects hold all of the operations that are applied to a value, so\n * they can be undone or redone as necessary.\n */\n\nexport interface History {\n  redos: Batch[]\n  undos: Batch[]\n}\n\n// eslint-disable-next-line no-redeclare\nexport const History = {\n  /**\n   * Check if a value is a `History` object.\n   */\n\n  isHistory(value: any): value is History {\n    return (\n      isPlainObject(value) &&\n      Array.isArray(value.redos) &&\n      Array.isArray(value.undos) &&\n      (value.redos.length === 0 ||\n        Operation.isOperationList(value.redos[0].operations)) &&\n      (value.undos.length === 0 ||\n        Operation.isOperationList(value.undos[0].operations))\n    )\n  },\n}\n","import { BaseEditor, Editor } from 'slate'\nimport { History } from './history'\n\n/**\n * Weakmaps for attaching state to the editor.\n */\n\nexport const HISTORY = new WeakMap<Editor, History>()\nexport const SAVING = new WeakMap<Editor, boolean | undefined>()\nexport const MERGING = new WeakMap<Editor, boolean | undefined>()\n\n/**\n * `HistoryEditor` contains helpers for history-enabled editors.\n */\n\nexport interface HistoryEditor extends BaseEditor {\n  history: History\n  undo: () => void\n  redo: () => void\n  writeHistory: (stack: 'undos' | 'redos', batch: any) => void\n}\n\n// eslint-disable-next-line no-redeclare\nexport const HistoryEditor = {\n  /**\n   * Check if a value is a `HistoryEditor` object.\n   */\n\n  isHistoryEditor(value: any): value is HistoryEditor {\n    return History.isHistory(value.history) && Editor.isEditor(value)\n  },\n\n  /**\n   * Get the merge flag's current value.\n   */\n\n  isMerging(editor: HistoryEditor): boolean | undefined {\n    return MERGING.get(editor)\n  },\n\n  /**\n   * Get the saving flag's current value.\n   */\n\n  isSaving(editor: HistoryEditor): boolean | undefined {\n    return SAVING.get(editor)\n  },\n\n  /**\n   * Redo to the previous saved state.\n   */\n\n  redo(editor: HistoryEditor): void {\n    editor.redo()\n  },\n\n  /**\n   * Undo to the previous saved state.\n   */\n\n  undo(editor: HistoryEditor): void {\n    editor.undo()\n  },\n\n  /**\n   * Apply a series of changes inside a synchronous `fn`, without merging any of\n   * the new operations into previous save point in the history.\n   */\n\n  withoutMerging(editor: HistoryEditor, fn: () => void): void {\n    const prev = HistoryEditor.isMerging(editor)\n    MERGING.set(editor, false)\n    fn()\n    MERGING.set(editor, prev)\n  },\n\n  /**\n   * Apply a series of changes inside a synchronous `fn`, without saving any of\n   * their operations into the history.\n   */\n\n  withoutSaving(editor: HistoryEditor, fn: () => void): void {\n    const prev = HistoryEditor.isSaving(editor)\n    SAVING.set(editor, false)\n    fn()\n    SAVING.set(editor, prev)\n  },\n}\n","import { Editor, Operation, Path, Range, Transforms } from 'slate'\n\nimport { HistoryEditor } from './history-editor'\n\n/**\n * The `withHistory` plugin keeps track of the operation history of a Slate\n * editor as operations are applied to it, using undo and redo stacks.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withHistory = <T extends Editor>(editor: T) => {\n  const e = editor as T & HistoryEditor\n  const { apply } = e\n  e.history = { undos: [], redos: [] }\n\n  e.redo = () => {\n    const { history } = e\n    const { redos } = history\n\n    if (redos.length > 0) {\n      const batch = redos[redos.length - 1]\n\n      if (batch.selectionBefore) {\n        Transforms.setSelection(e, batch.selectionBefore)\n      }\n\n      HistoryEditor.withoutSaving(e, () => {\n        Editor.withoutNormalizing(e, () => {\n          for (const op of batch.operations) {\n            e.apply(op)\n          }\n        })\n      })\n\n      history.redos.pop()\n      e.writeHistory('undos', batch)\n    }\n  }\n\n  e.undo = () => {\n    const { history } = e\n    const { undos } = history\n\n    if (undos.length > 0) {\n      const batch = undos[undos.length - 1]\n\n      HistoryEditor.withoutSaving(e, () => {\n        Editor.withoutNormalizing(e, () => {\n          const inverseOps = batch.operations.map(Operation.inverse).reverse()\n\n          for (const op of inverseOps) {\n            e.apply(op)\n          }\n          if (batch.selectionBefore) {\n            Transforms.setSelection(e, batch.selectionBefore)\n          }\n        })\n      })\n\n      e.writeHistory('redos', batch)\n      history.undos.pop()\n    }\n  }\n\n  e.apply = (op: Operation) => {\n    const { operations, history } = e\n    const { undos } = history\n    const lastBatch = undos[undos.length - 1]\n    const lastOp =\n      lastBatch && lastBatch.operations[lastBatch.operations.length - 1]\n    let save = HistoryEditor.isSaving(e)\n    let merge = HistoryEditor.isMerging(e)\n\n    if (save == null) {\n      save = shouldSave(op, lastOp)\n    }\n\n    if (save) {\n      if (merge == null) {\n        if (lastBatch == null) {\n          merge = false\n        } else if (operations.length !== 0) {\n          merge = true\n        } else {\n          merge = shouldMerge(op, lastOp)\n        }\n      }\n\n      if (lastBatch && merge) {\n        lastBatch.operations.push(op)\n      } else {\n        const batch = {\n          operations: [op],\n          selectionBefore: e.selection,\n        }\n        e.writeHistory('undos', batch)\n      }\n\n      while (undos.length > 100) {\n        undos.shift()\n      }\n\n      history.redos = []\n    }\n\n    apply(op)\n  }\n\n  e.writeHistory = (stack: 'undos' | 'redos', batch: any) => {\n    e.history[stack].push(batch)\n  }\n\n  return e\n}\n\n/**\n * Check whether to merge an operation into the previous operation.\n */\n\nconst shouldMerge = (op: Operation, prev: Operation | undefined): boolean => {\n  if (\n    prev &&\n    op.type === 'insert_text' &&\n    prev.type === 'insert_text' &&\n    op.offset === prev.offset + prev.text.length &&\n    Path.equals(op.path, prev.path)\n  ) {\n    return true\n  }\n\n  if (\n    prev &&\n    op.type === 'remove_text' &&\n    prev.type === 'remove_text' &&\n    op.offset + op.text.length === prev.offset &&\n    Path.equals(op.path, prev.path)\n  ) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check whether an operation needs to be saved to the history.\n */\n\nconst shouldSave = (op: Operation, prev: Operation | undefined): boolean => {\n  if (op.type === 'set_selection') {\n    return false\n  }\n\n  return true\n}\n"],"names":["History","isHistory","value","isPlainObject","Array","isArray","redos","undos","length","Operation","isOperationList","operations","HISTORY","WeakMap","SAVING","MERGING","HistoryEditor","isHistoryEditor","history","Editor","isEditor","isMerging","editor","get","isSaving","redo","undo","withoutMerging","fn","prev","set","withoutSaving","withHistory","e","apply","batch","selectionBefore","Transforms","setSelection","withoutNormalizing","op","pop","writeHistory","inverseOps","map","inverse","reverse","lastBatch","lastOp","save","merge","shouldSave","shouldMerge","push","selection","shift","stack","type","offset","text","Path","equals","path"],"mappings":"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"}