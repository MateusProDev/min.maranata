"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _base = _interopRequireDefault(require("@emotion/styled/base"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));
var _decapCmsUiDefault = require("decap-cms-ui-default");
var _react2 = require("@emotion/react");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const IMAGE_HEIGHT = 160;
const Card = /*#__PURE__*/(0, _base.default)("div", {
  target: "e2etv5a5",
  label: "Card"
})("width:", props => props.width, ";height:", props => props.height, ";margin:", props => props.margin, ";border:", _decapCmsUiDefault.borders.textField, ";border-color:", props => props.isSelected && _decapCmsUiDefault.colors.active, ";border-radius:", _decapCmsUiDefault.lengths.borderRadius, ";cursor:pointer;overflow:hidden;background-color:", props => props.isPrivate && _decapCmsUiDefault.colors.textFieldBorder, ";&:focus{outline:none;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVF1QiIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9NZWRpYUxpYnJhcnkvTWVkaWFMaWJyYXJ5Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEltbXV0YWJsZVByb3BUeXBlcyBmcm9tICdyZWFjdC1pbW11dGFibGUtcHJvcHR5cGVzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNvbG9ycywgYm9yZGVycywgbGVuZ3Rocywgc2hhZG93cywgZWZmZWN0cyB9IGZyb20gJ2RlY2FwLWNtcy11aS1kZWZhdWx0JztcblxuY29uc3QgSU1BR0VfSEVJR0hUID0gMTYwO1xuXG5jb25zdCBDYXJkID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMud2lkdGh9O1xuICBoZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMuaGVpZ2h0fTtcbiAgbWFyZ2luOiAke3Byb3BzID0+IHByb3BzLm1hcmdpbn07XG4gIGJvcmRlcjogJHtib3JkZXJzLnRleHRGaWVsZH07XG4gIGJvcmRlci1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1NlbGVjdGVkICYmIGNvbG9ycy5hY3RpdmV9O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLmlzUHJpdmF0ZSAmJiBjb2xvcnMudGV4dEZpZWxkQm9yZGVyfTtcblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2VXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVCArIDJ9cHg7XG4gICR7ZWZmZWN0cy5jaGVja2VyYm9hcmR9O1xuICAke3NoYWRvd3MuaW5zZXR9O1xuICBib3JkZXItYm90dG9tOiBzb2xpZCAke2xlbmd0aHMuYm9yZGVyV2lkdGh9ICR7Y29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IENhcmRJbWFnZSA9IHN0eWxlZC5pbWdgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7SU1BR0VfSEVJR0hUfXB4O1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBib3JkZXItcmFkaXVzOiAycHggMnB4IDAgMDtcbmA7XG5cbmNvbnN0IENhcmRGaWxlSWNvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDE2MHB4O1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG4gIHBhZGRpbmc6IDFlbTtcbiAgZm9udC1zaXplOiAzZW07XG5gO1xuXG5jb25zdCBDYXJkVGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIHBhZGRpbmc6IDhweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcbiAgbGluZS1oZWlnaHQ6IDEuMyAhaW1wb3J0YW50O1xuYDtcblxuY29uc3QgRHJhZnRUZXh0ID0gc3R5bGVkLnBgXG4gIGNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0VGV4dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLm1lZGlhRHJhZnRCYWNrZ3JvdW5kfTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwYWRkaW5nOiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6ICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDAgJHtsZW5ndGhzLmJvcmRlclJhZGl1c30gMDtcbmA7XG5cbmNsYXNzIE1lZGlhTGlicmFyeUNhcmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgaXNTZWxlY3RlZCxcbiAgICAgIGRpc3BsYXlVUkwsXG4gICAgICB0ZXh0LFxuICAgICAgb25DbGljayxcbiAgICAgIGRyYWZ0VGV4dCxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgICAgbWFyZ2luLFxuICAgICAgaXNQcml2YXRlLFxuICAgICAgdHlwZSxcbiAgICAgIGlzVmlld2FibGVJbWFnZSxcbiAgICAgIGlzRHJhZnQsXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgdXJsID0gZGlzcGxheVVSTC5nZXQoJ3VybCcpO1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZFxuICAgICAgICBpc1NlbGVjdGVkPXtpc1NlbGVjdGVkfVxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICBtYXJnaW49e21hcmdpbn1cbiAgICAgICAgdGFiSW5kZXg9XCItMVwiXG4gICAgICAgIGlzUHJpdmF0ZT17aXNQcml2YXRlfVxuICAgICAgPlxuICAgICAgICA8Q2FyZEltYWdlV3JhcHBlcj5cbiAgICAgICAgICB7aXNEcmFmdCA/IDxEcmFmdFRleHQgZGF0YS10ZXN0aWQ9XCJkcmFmdC10ZXh0XCI+e2RyYWZ0VGV4dH08L0RyYWZ0VGV4dD4gOiBudWxsfVxuICAgICAgICAgIHt1cmwgJiYgaXNWaWV3YWJsZUltYWdlID8gKFxuICAgICAgICAgICAgPENhcmRJbWFnZSBsb2FkaW5nPVwibGF6eVwiIHNyYz17dXJsfSAvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8Q2FyZEZpbGVJY29uIGRhdGEtdGVzdGlkPVwiY2FyZC1maWxlLWljb25cIj57dHlwZX08L0NhcmRGaWxlSWNvbj5cbiAgICAgICAgICApfVxuICAgICAgICA8L0NhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgIDxDYXJkVGV4dD57dGV4dH08L0NhcmRUZXh0PlxuICAgICAgPC9DYXJkPlxuICAgICk7XG4gIH1cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgeyBkaXNwbGF5VVJMLCBsb2FkRGlzcGxheVVSTCB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoIWRpc3BsYXlVUkwuZ2V0KCd1cmwnKSkge1xuICAgICAgbG9hZERpc3BsYXlVUkwoKTtcbiAgICB9XG4gIH1cbn1cblxuTWVkaWFMaWJyYXJ5Q2FyZC5wcm9wVHlwZXMgPSB7XG4gIGlzU2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICBkaXNwbGF5VVJMOiBJbW11dGFibGVQcm9wVHlwZXMubWFwLmlzUmVxdWlyZWQsXG4gIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgZHJhZnRUZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHdpZHRoOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGhlaWdodDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBtYXJnaW46IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgaXNQcml2YXRlOiBQcm9wVHlwZXMuYm9vbCxcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgaXNWaWV3YWJsZUltYWdlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBsb2FkRGlzcGxheVVSTDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNEcmFmdDogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBNZWRpYUxpYnJhcnlDYXJkO1xuIl19 */"));
const CardImageWrapper = /*#__PURE__*/(0, _base.default)("div", {
  target: "e2etv5a4",
  label: "CardImageWrapper"
})("height:", IMAGE_HEIGHT + 2, "px;", _decapCmsUiDefault.effects.checkerboard, ";", _decapCmsUiDefault.shadows.inset, ";border-bottom:solid ", _decapCmsUiDefault.lengths.borderWidth, " ", _decapCmsUiDefault.colors.textFieldBorder, ";position:relative;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdCbUMiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTWVkaWFMaWJyYXJ5L01lZGlhTGlicmFyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJbW11dGFibGVQcm9wVHlwZXMgZnJvbSAncmVhY3QtaW1tdXRhYmxlLXByb3B0eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGJvcmRlcnMsIGxlbmd0aHMsIHNoYWRvd3MsIGVmZmVjdHMgfSBmcm9tICdkZWNhcC1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IElNQUdFX0hFSUdIVCA9IDE2MDtcblxuY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLndpZHRofTtcbiAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodH07XG4gIG1hcmdpbjogJHtwcm9wcyA9PiBwcm9wcy5tYXJnaW59O1xuICBib3JkZXI6ICR7Ym9yZGVycy50ZXh0RmllbGR9O1xuICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuaXNTZWxlY3RlZCAmJiBjb2xvcnMuYWN0aXZlfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1ByaXZhdGUgJiYgY29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogJHtJTUFHRV9IRUlHSFQgKyAyfXB4O1xuICAke2VmZmVjdHMuY2hlY2tlcmJvYXJkfTtcbiAgJHtzaGFkb3dzLmluc2V0fTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgJHtsZW5ndGhzLmJvcmRlcldpZHRofSAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVH1weDtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG5gO1xuXG5jb25zdCBDYXJkRmlsZUljb24gPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtc2l6ZTogM2VtO1xuYDtcblxuY29uc3QgQ2FyZFRleHQgPSBzdHlsZWQucGBcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjMgIWltcG9ydGFudDtcbmA7XG5cbmNvbnN0IERyYWZ0VGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMubWVkaWFEcmFmdFRleHR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0QmFja2dyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfSAwICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDA7XG5gO1xuXG5jbGFzcyBNZWRpYUxpYnJhcnlDYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBkaXNwbGF5VVJMLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBkcmFmdFRleHQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hcmdpbixcbiAgICAgIGlzUHJpdmF0ZSxcbiAgICAgIHR5cGUsXG4gICAgICBpc1ZpZXdhYmxlSW1hZ2UsXG4gICAgICBpc0RyYWZ0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVybCA9IGRpc3BsYXlVUkwuZ2V0KCd1cmwnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmRcbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgbWFyZ2luPXttYXJnaW59XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cbiAgICAgID5cbiAgICAgICAgPENhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgICAge2lzRHJhZnQgPyA8RHJhZnRUZXh0IGRhdGEtdGVzdGlkPVwiZHJhZnQtdGV4dFwiPntkcmFmdFRleHR9PC9EcmFmdFRleHQ+IDogbnVsbH1cbiAgICAgICAgICB7dXJsICYmIGlzVmlld2FibGVJbWFnZSA/IChcbiAgICAgICAgICAgIDxDYXJkSW1hZ2UgbG9hZGluZz1cImxhenlcIiBzcmM9e3VybH0gLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPENhcmRGaWxlSWNvbiBkYXRhLXRlc3RpZD1cImNhcmQtZmlsZS1pY29uXCI+e3R5cGV9PC9DYXJkRmlsZUljb24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9DYXJkSW1hZ2VXcmFwcGVyPlxuICAgICAgICA8Q2FyZFRleHQ+e3RleHR9PC9DYXJkVGV4dD5cbiAgICAgIDwvQ2FyZD5cbiAgICApO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGlzcGxheVVSTCwgbG9hZERpc3BsYXlVUkwgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCFkaXNwbGF5VVJMLmdldCgndXJsJykpIHtcbiAgICAgIGxvYWREaXNwbGF5VVJMKCk7XG4gICAgfVxuICB9XG59XG5cbk1lZGlhTGlicmFyeUNhcmQucHJvcFR5cGVzID0ge1xuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzcGxheVVSTDogSW1tdXRhYmxlUHJvcFR5cGVzLm1hcC5pc1JlcXVpcmVkLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRyYWZ0VGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGlzUHJpdmF0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlzVmlld2FibGVJbWFnZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgbG9hZERpc3BsYXlVUkw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzRHJhZnQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFMaWJyYXJ5Q2FyZDtcbiJdfQ== */"));
const CardImage = /*#__PURE__*/(0, _base.default)("img", {
  target: "e2etv5a3",
  label: "CardImage"
})("width:100%;height:", IMAGE_HEIGHT, "px;object-fit:contain;border-radius:2px 2px 0 0;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDNEIiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTWVkaWFMaWJyYXJ5L01lZGlhTGlicmFyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJbW11dGFibGVQcm9wVHlwZXMgZnJvbSAncmVhY3QtaW1tdXRhYmxlLXByb3B0eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGJvcmRlcnMsIGxlbmd0aHMsIHNoYWRvd3MsIGVmZmVjdHMgfSBmcm9tICdkZWNhcC1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IElNQUdFX0hFSUdIVCA9IDE2MDtcblxuY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLndpZHRofTtcbiAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodH07XG4gIG1hcmdpbjogJHtwcm9wcyA9PiBwcm9wcy5tYXJnaW59O1xuICBib3JkZXI6ICR7Ym9yZGVycy50ZXh0RmllbGR9O1xuICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuaXNTZWxlY3RlZCAmJiBjb2xvcnMuYWN0aXZlfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1ByaXZhdGUgJiYgY29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogJHtJTUFHRV9IRUlHSFQgKyAyfXB4O1xuICAke2VmZmVjdHMuY2hlY2tlcmJvYXJkfTtcbiAgJHtzaGFkb3dzLmluc2V0fTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgJHtsZW5ndGhzLmJvcmRlcldpZHRofSAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVH1weDtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG5gO1xuXG5jb25zdCBDYXJkRmlsZUljb24gPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtc2l6ZTogM2VtO1xuYDtcblxuY29uc3QgQ2FyZFRleHQgPSBzdHlsZWQucGBcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjMgIWltcG9ydGFudDtcbmA7XG5cbmNvbnN0IERyYWZ0VGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMubWVkaWFEcmFmdFRleHR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0QmFja2dyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfSAwICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDA7XG5gO1xuXG5jbGFzcyBNZWRpYUxpYnJhcnlDYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBkaXNwbGF5VVJMLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBkcmFmdFRleHQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hcmdpbixcbiAgICAgIGlzUHJpdmF0ZSxcbiAgICAgIHR5cGUsXG4gICAgICBpc1ZpZXdhYmxlSW1hZ2UsXG4gICAgICBpc0RyYWZ0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVybCA9IGRpc3BsYXlVUkwuZ2V0KCd1cmwnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmRcbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgbWFyZ2luPXttYXJnaW59XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cbiAgICAgID5cbiAgICAgICAgPENhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgICAge2lzRHJhZnQgPyA8RHJhZnRUZXh0IGRhdGEtdGVzdGlkPVwiZHJhZnQtdGV4dFwiPntkcmFmdFRleHR9PC9EcmFmdFRleHQ+IDogbnVsbH1cbiAgICAgICAgICB7dXJsICYmIGlzVmlld2FibGVJbWFnZSA/IChcbiAgICAgICAgICAgIDxDYXJkSW1hZ2UgbG9hZGluZz1cImxhenlcIiBzcmM9e3VybH0gLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPENhcmRGaWxlSWNvbiBkYXRhLXRlc3RpZD1cImNhcmQtZmlsZS1pY29uXCI+e3R5cGV9PC9DYXJkRmlsZUljb24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9DYXJkSW1hZ2VXcmFwcGVyPlxuICAgICAgICA8Q2FyZFRleHQ+e3RleHR9PC9DYXJkVGV4dD5cbiAgICAgIDwvQ2FyZD5cbiAgICApO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGlzcGxheVVSTCwgbG9hZERpc3BsYXlVUkwgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCFkaXNwbGF5VVJMLmdldCgndXJsJykpIHtcbiAgICAgIGxvYWREaXNwbGF5VVJMKCk7XG4gICAgfVxuICB9XG59XG5cbk1lZGlhTGlicmFyeUNhcmQucHJvcFR5cGVzID0ge1xuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzcGxheVVSTDogSW1tdXRhYmxlUHJvcFR5cGVzLm1hcC5pc1JlcXVpcmVkLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRyYWZ0VGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGlzUHJpdmF0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlzVmlld2FibGVJbWFnZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgbG9hZERpc3BsYXlVUkw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzRHJhZnQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFMaWJyYXJ5Q2FyZDtcbiJdfQ== */"));
const CardFileIcon = /*#__PURE__*/(0, _base.default)("div", {
  target: "e2etv5a2",
  label: "CardFileIcon"
})(process.env.NODE_ENV === "production" ? {
  name: "viljxp",
  styles: "width:100%;height:160px;object-fit:cover;border-radius:2px 2px 0 0;padding:1em;font-size:3em"
} : {
  name: "viljxp",
  styles: "width:100%;height:160px;object-fit:cover;border-radius:2px 2px 0 0;padding:1em;font-size:3em",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVDK0IiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTWVkaWFMaWJyYXJ5L01lZGlhTGlicmFyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJbW11dGFibGVQcm9wVHlwZXMgZnJvbSAncmVhY3QtaW1tdXRhYmxlLXByb3B0eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGJvcmRlcnMsIGxlbmd0aHMsIHNoYWRvd3MsIGVmZmVjdHMgfSBmcm9tICdkZWNhcC1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IElNQUdFX0hFSUdIVCA9IDE2MDtcblxuY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLndpZHRofTtcbiAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodH07XG4gIG1hcmdpbjogJHtwcm9wcyA9PiBwcm9wcy5tYXJnaW59O1xuICBib3JkZXI6ICR7Ym9yZGVycy50ZXh0RmllbGR9O1xuICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuaXNTZWxlY3RlZCAmJiBjb2xvcnMuYWN0aXZlfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1ByaXZhdGUgJiYgY29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogJHtJTUFHRV9IRUlHSFQgKyAyfXB4O1xuICAke2VmZmVjdHMuY2hlY2tlcmJvYXJkfTtcbiAgJHtzaGFkb3dzLmluc2V0fTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgJHtsZW5ndGhzLmJvcmRlcldpZHRofSAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVH1weDtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG5gO1xuXG5jb25zdCBDYXJkRmlsZUljb24gPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtc2l6ZTogM2VtO1xuYDtcblxuY29uc3QgQ2FyZFRleHQgPSBzdHlsZWQucGBcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjMgIWltcG9ydGFudDtcbmA7XG5cbmNvbnN0IERyYWZ0VGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMubWVkaWFEcmFmdFRleHR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0QmFja2dyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfSAwICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDA7XG5gO1xuXG5jbGFzcyBNZWRpYUxpYnJhcnlDYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBkaXNwbGF5VVJMLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBkcmFmdFRleHQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hcmdpbixcbiAgICAgIGlzUHJpdmF0ZSxcbiAgICAgIHR5cGUsXG4gICAgICBpc1ZpZXdhYmxlSW1hZ2UsXG4gICAgICBpc0RyYWZ0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVybCA9IGRpc3BsYXlVUkwuZ2V0KCd1cmwnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmRcbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgbWFyZ2luPXttYXJnaW59XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cbiAgICAgID5cbiAgICAgICAgPENhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgICAge2lzRHJhZnQgPyA8RHJhZnRUZXh0IGRhdGEtdGVzdGlkPVwiZHJhZnQtdGV4dFwiPntkcmFmdFRleHR9PC9EcmFmdFRleHQ+IDogbnVsbH1cbiAgICAgICAgICB7dXJsICYmIGlzVmlld2FibGVJbWFnZSA/IChcbiAgICAgICAgICAgIDxDYXJkSW1hZ2UgbG9hZGluZz1cImxhenlcIiBzcmM9e3VybH0gLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPENhcmRGaWxlSWNvbiBkYXRhLXRlc3RpZD1cImNhcmQtZmlsZS1pY29uXCI+e3R5cGV9PC9DYXJkRmlsZUljb24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9DYXJkSW1hZ2VXcmFwcGVyPlxuICAgICAgICA8Q2FyZFRleHQ+e3RleHR9PC9DYXJkVGV4dD5cbiAgICAgIDwvQ2FyZD5cbiAgICApO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGlzcGxheVVSTCwgbG9hZERpc3BsYXlVUkwgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCFkaXNwbGF5VVJMLmdldCgndXJsJykpIHtcbiAgICAgIGxvYWREaXNwbGF5VVJMKCk7XG4gICAgfVxuICB9XG59XG5cbk1lZGlhTGlicmFyeUNhcmQucHJvcFR5cGVzID0ge1xuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzcGxheVVSTDogSW1tdXRhYmxlUHJvcFR5cGVzLm1hcC5pc1JlcXVpcmVkLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRyYWZ0VGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGlzUHJpdmF0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlzVmlld2FibGVJbWFnZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgbG9hZERpc3BsYXlVUkw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzRHJhZnQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFMaWJyYXJ5Q2FyZDtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const CardText = /*#__PURE__*/(0, _base.default)("p", {
  target: "e2etv5a1",
  label: "CardText"
})("color:", _decapCmsUiDefault.colors.text, ";padding:8px;margin-top:20px;overflow-wrap:break-word;line-height:1.3!important;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEeUIiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTWVkaWFMaWJyYXJ5L01lZGlhTGlicmFyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJbW11dGFibGVQcm9wVHlwZXMgZnJvbSAncmVhY3QtaW1tdXRhYmxlLXByb3B0eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGJvcmRlcnMsIGxlbmd0aHMsIHNoYWRvd3MsIGVmZmVjdHMgfSBmcm9tICdkZWNhcC1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IElNQUdFX0hFSUdIVCA9IDE2MDtcblxuY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLndpZHRofTtcbiAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodH07XG4gIG1hcmdpbjogJHtwcm9wcyA9PiBwcm9wcy5tYXJnaW59O1xuICBib3JkZXI6ICR7Ym9yZGVycy50ZXh0RmllbGR9O1xuICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuaXNTZWxlY3RlZCAmJiBjb2xvcnMuYWN0aXZlfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1ByaXZhdGUgJiYgY29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogJHtJTUFHRV9IRUlHSFQgKyAyfXB4O1xuICAke2VmZmVjdHMuY2hlY2tlcmJvYXJkfTtcbiAgJHtzaGFkb3dzLmluc2V0fTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgJHtsZW5ndGhzLmJvcmRlcldpZHRofSAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVH1weDtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG5gO1xuXG5jb25zdCBDYXJkRmlsZUljb24gPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtc2l6ZTogM2VtO1xuYDtcblxuY29uc3QgQ2FyZFRleHQgPSBzdHlsZWQucGBcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjMgIWltcG9ydGFudDtcbmA7XG5cbmNvbnN0IERyYWZ0VGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMubWVkaWFEcmFmdFRleHR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0QmFja2dyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfSAwICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDA7XG5gO1xuXG5jbGFzcyBNZWRpYUxpYnJhcnlDYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBkaXNwbGF5VVJMLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBkcmFmdFRleHQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hcmdpbixcbiAgICAgIGlzUHJpdmF0ZSxcbiAgICAgIHR5cGUsXG4gICAgICBpc1ZpZXdhYmxlSW1hZ2UsXG4gICAgICBpc0RyYWZ0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVybCA9IGRpc3BsYXlVUkwuZ2V0KCd1cmwnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmRcbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgbWFyZ2luPXttYXJnaW59XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cbiAgICAgID5cbiAgICAgICAgPENhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgICAge2lzRHJhZnQgPyA8RHJhZnRUZXh0IGRhdGEtdGVzdGlkPVwiZHJhZnQtdGV4dFwiPntkcmFmdFRleHR9PC9EcmFmdFRleHQ+IDogbnVsbH1cbiAgICAgICAgICB7dXJsICYmIGlzVmlld2FibGVJbWFnZSA/IChcbiAgICAgICAgICAgIDxDYXJkSW1hZ2UgbG9hZGluZz1cImxhenlcIiBzcmM9e3VybH0gLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPENhcmRGaWxlSWNvbiBkYXRhLXRlc3RpZD1cImNhcmQtZmlsZS1pY29uXCI+e3R5cGV9PC9DYXJkRmlsZUljb24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9DYXJkSW1hZ2VXcmFwcGVyPlxuICAgICAgICA8Q2FyZFRleHQ+e3RleHR9PC9DYXJkVGV4dD5cbiAgICAgIDwvQ2FyZD5cbiAgICApO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGlzcGxheVVSTCwgbG9hZERpc3BsYXlVUkwgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCFkaXNwbGF5VVJMLmdldCgndXJsJykpIHtcbiAgICAgIGxvYWREaXNwbGF5VVJMKCk7XG4gICAgfVxuICB9XG59XG5cbk1lZGlhTGlicmFyeUNhcmQucHJvcFR5cGVzID0ge1xuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzcGxheVVSTDogSW1tdXRhYmxlUHJvcFR5cGVzLm1hcC5pc1JlcXVpcmVkLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRyYWZ0VGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGlzUHJpdmF0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlzVmlld2FibGVJbWFnZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgbG9hZERpc3BsYXlVUkw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzRHJhZnQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFMaWJyYXJ5Q2FyZDtcbiJdfQ== */"));
const DraftText = /*#__PURE__*/(0, _base.default)("p", {
  target: "e2etv5a0",
  label: "DraftText"
})("color:", _decapCmsUiDefault.colors.mediaDraftText, ";background-color:", _decapCmsUiDefault.colors.mediaDraftBackground, ";position:absolute;padding:8px;border-radius:", _decapCmsUiDefault.lengths.borderRadius, " 0 ", _decapCmsUiDefault.lengths.borderRadius, " 0;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01lZGlhTGlicmFyeS9NZWRpYUxpYnJhcnlDYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdEMEIiLCJmaWxlIjoiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTWVkaWFMaWJyYXJ5L01lZGlhTGlicmFyeUNhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBJbW11dGFibGVQcm9wVHlwZXMgZnJvbSAncmVhY3QtaW1tdXRhYmxlLXByb3B0eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjb2xvcnMsIGJvcmRlcnMsIGxlbmd0aHMsIHNoYWRvd3MsIGVmZmVjdHMgfSBmcm9tICdkZWNhcC1jbXMtdWktZGVmYXVsdCc7XG5cbmNvbnN0IElNQUdFX0hFSUdIVCA9IDE2MDtcblxuY29uc3QgQ2FyZCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLndpZHRofTtcbiAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodH07XG4gIG1hcmdpbjogJHtwcm9wcyA9PiBwcm9wcy5tYXJnaW59O1xuICBib3JkZXI6ICR7Ym9yZGVycy50ZXh0RmllbGR9O1xuICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMuaXNTZWxlY3RlZCAmJiBjb2xvcnMuYWN0aXZlfTtcbiAgYm9yZGVyLXJhZGl1czogJHtsZW5ndGhzLmJvcmRlclJhZGl1c307XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5pc1ByaXZhdGUgJiYgY29sb3JzLnRleHRGaWVsZEJvcmRlcn07XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgQ2FyZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogJHtJTUFHRV9IRUlHSFQgKyAyfXB4O1xuICAke2VmZmVjdHMuY2hlY2tlcmJvYXJkfTtcbiAgJHtzaGFkb3dzLmluc2V0fTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgJHtsZW5ndGhzLmJvcmRlcldpZHRofSAke2NvbG9ycy50ZXh0RmllbGRCb3JkZXJ9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5gO1xuXG5jb25zdCBDYXJkSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke0lNQUdFX0hFSUdIVH1weDtcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XG5gO1xuXG5jb25zdCBDYXJkRmlsZUljb24gPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweCAycHggMCAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGZvbnQtc2l6ZTogM2VtO1xuYDtcblxuY29uc3QgQ2FyZFRleHQgPSBzdHlsZWQucGBcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjMgIWltcG9ydGFudDtcbmA7XG5cbmNvbnN0IERyYWZ0VGV4dCA9IHN0eWxlZC5wYFxuICBjb2xvcjogJHtjb2xvcnMubWVkaWFEcmFmdFRleHR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5tZWRpYURyYWZ0QmFja2dyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiAke2xlbmd0aHMuYm9yZGVyUmFkaXVzfSAwICR7bGVuZ3Rocy5ib3JkZXJSYWRpdXN9IDA7XG5gO1xuXG5jbGFzcyBNZWRpYUxpYnJhcnlDYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBkaXNwbGF5VVJMLFxuICAgICAgdGV4dCxcbiAgICAgIG9uQ2xpY2ssXG4gICAgICBkcmFmdFRleHQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hcmdpbixcbiAgICAgIGlzUHJpdmF0ZSxcbiAgICAgIHR5cGUsXG4gICAgICBpc1ZpZXdhYmxlSW1hZ2UsXG4gICAgICBpc0RyYWZ0LFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHVybCA9IGRpc3BsYXlVUkwuZ2V0KCd1cmwnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmRcbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgbWFyZ2luPXttYXJnaW59XG4gICAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgICBpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cbiAgICAgID5cbiAgICAgICAgPENhcmRJbWFnZVdyYXBwZXI+XG4gICAgICAgICAge2lzRHJhZnQgPyA8RHJhZnRUZXh0IGRhdGEtdGVzdGlkPVwiZHJhZnQtdGV4dFwiPntkcmFmdFRleHR9PC9EcmFmdFRleHQ+IDogbnVsbH1cbiAgICAgICAgICB7dXJsICYmIGlzVmlld2FibGVJbWFnZSA/IChcbiAgICAgICAgICAgIDxDYXJkSW1hZ2UgbG9hZGluZz1cImxhenlcIiBzcmM9e3VybH0gLz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPENhcmRGaWxlSWNvbiBkYXRhLXRlc3RpZD1cImNhcmQtZmlsZS1pY29uXCI+e3R5cGV9PC9DYXJkRmlsZUljb24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9DYXJkSW1hZ2VXcmFwcGVyPlxuICAgICAgICA8Q2FyZFRleHQ+e3RleHR9PC9DYXJkVGV4dD5cbiAgICAgIDwvQ2FyZD5cbiAgICApO1xuICB9XG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGlzcGxheVVSTCwgbG9hZERpc3BsYXlVUkwgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKCFkaXNwbGF5VVJMLmdldCgndXJsJykpIHtcbiAgICAgIGxvYWREaXNwbGF5VVJMKCk7XG4gICAgfVxuICB9XG59XG5cbk1lZGlhTGlicmFyeUNhcmQucHJvcFR5cGVzID0ge1xuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgZGlzcGxheVVSTDogSW1tdXRhYmxlUHJvcFR5cGVzLm1hcC5pc1JlcXVpcmVkLFxuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGRyYWZ0VGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB3aWR0aDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFyZ2luOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGlzUHJpdmF0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGlzVmlld2FibGVJbWFnZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgbG9hZERpc3BsYXlVUkw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzRHJhZnQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVkaWFMaWJyYXJ5Q2FyZDtcbiJdfQ== */"));
class MediaLibraryCard extends _react.default.Component {
  render() {
    const {
      isSelected,
      displayURL,
      text,
      onClick,
      draftText,
      width,
      height,
      margin,
      isPrivate,
      type,
      isViewableImage,
      isDraft
    } = this.props;
    const url = displayURL.get('url');
    return (0, _react2.jsx)(Card, {
      isSelected: isSelected,
      onClick: onClick,
      width: width,
      height: height,
      margin: margin,
      tabIndex: "-1",
      isPrivate: isPrivate
    }, (0, _react2.jsx)(CardImageWrapper, null, isDraft ? (0, _react2.jsx)(DraftText, {
      "data-testid": "draft-text"
    }, draftText) : null, url && isViewableImage ? (0, _react2.jsx)(CardImage, {
      loading: "lazy",
      src: url
    }) : (0, _react2.jsx)(CardFileIcon, {
      "data-testid": "card-file-icon"
    }, type)), (0, _react2.jsx)(CardText, null, text));
  }
  componentDidMount() {
    const {
      displayURL,
      loadDisplayURL
    } = this.props;
    if (!displayURL.get('url')) {
      loadDisplayURL();
    }
  }
}
MediaLibraryCard.propTypes = {
  isSelected: _propTypes.default.bool,
  displayURL: _reactImmutableProptypes.default.map.isRequired,
  text: _propTypes.default.string.isRequired,
  onClick: _propTypes.default.func.isRequired,
  draftText: _propTypes.default.string.isRequired,
  width: _propTypes.default.string.isRequired,
  height: _propTypes.default.string.isRequired,
  margin: _propTypes.default.string.isRequired,
  isPrivate: _propTypes.default.bool,
  type: _propTypes.default.string,
  isViewableImage: _propTypes.default.bool.isRequired,
  loadDisplayURL: _propTypes.default.func.isRequired,
  isDraft: _propTypes.default.bool
};
var _default = exports.default = MediaLibraryCard;