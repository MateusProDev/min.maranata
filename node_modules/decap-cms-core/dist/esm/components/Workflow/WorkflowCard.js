"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _base = _interopRequireDefault(require("@emotion/styled/base"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react2 = require("@emotion/react");
var _reactPolyglot = require("react-polyglot");
var _reactRouterDom = require("react-router-dom");
var _decapCmsUiDefault = require("decap-cms-ui-default");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const styles = {
  text: process.env.NODE_ENV === "production" ? {
    name: "1lc6g5t-text",
    styles: "font-size:13px;font-weight:normal;margin-top:4px;label:text;"
  } : {
    name: "1lc6g5t-text",
    styles: "font-size:13px;font-weight:normal;margin-top:4px;label:text;",
    map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTVyIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Xb3JrZmxvdy9Xb3JrZmxvd0NhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IHRyYW5zbGF0ZSB9IGZyb20gJ3JlYWN0LXBvbHlnbG90JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IGNvbXBvbmVudHMsIGNvbG9ycywgY29sb3JzUmF3LCB0cmFuc2l0aW9ucywgYnV0dG9ucyB9IGZyb20gJ2RlY2FwLWNtcy11aS1kZWZhdWx0JztcblxuY29uc3Qgc3R5bGVzID0ge1xuICB0ZXh0OiBjc3NgXG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICBgLFxuICBidXR0b246IGNzc2BcbiAgICAke2J1dHRvbnMuYnV0dG9ufTtcbiAgICB3aWR0aDogYXV0bztcbiAgICBmbGV4OiAxIDAgMDtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgcGFkZGluZzogNnB4IDA7XG4gIGAsXG59O1xuXG5jb25zdCBXb3JrZmxvd0xpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwIDE4cHggMThweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbmA7XG5cbmNvbnN0IENhcmRDb2xsZWN0aW9uID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbmA7XG5cbmNvbnN0IENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luOiAyOHB4IDAgMDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IENhcmREYXRlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtzdHlsZXMudGV4dH07XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5wYFxuICAke3N0eWxlcy50ZXh0fTtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBtYXJnaW46IDI0cHggMCAwO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICBoeXBoZW5zOiBhdXRvO1xuYDtcblxuY29uc3QgQ2FyZEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmZvcmVncm91bmR9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEycHggMThweDtcbiAgZGlzcGxheTogZmxleDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAke3RyYW5zaXRpb25zLm1haW59O1xuICBjdXJzb3I6IHBvaW50ZXI7XG5gO1xuXG5jb25zdCBEZWxldGVCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke3N0eWxlcy5idXR0b259O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy5yZWRMaWdodH07XG4gIGNvbG9yOiAke2NvbG9yc1Jhdy5yZWR9O1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbmA7XG5cbmNvbnN0IFB1Ymxpc2hCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke3N0eWxlcy5idXR0b259O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy50ZWFsfTtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMaWdodH07XG4gIG1hcmdpbi1sZWZ0OiA2cHg7XG5cbiAgJltkaXNhYmxlZF0ge1xuICAgICR7YnV0dG9ucy5kaXNhYmxlZH07XG4gIH1cbmA7XG5cbmNvbnN0IFdvcmtmbG93Q2FyZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICY6aG92ZXIgJHtDYXJkQnV0dG9uQ29udGFpbmVyfSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuYDtcblxuZnVuY3Rpb24gbGFzdENoYW5nZVBocmFzZUtleShkYXRlLCBhdXRob3IpIHtcbiAgaWYgKGRhdGUgJiYgYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlJztcbiAgfSBlbHNlIGlmIChkYXRlKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9BdXRob3InO1xuICB9IGVsc2UgaWYgKGF1dGhvcikge1xuICAgIHJldHVybiAnbGFzdENoYW5nZU5vRGF0ZSc7XG4gIH1cbn1cblxuY29uc3QgQ2FyZERhdGUgPSB0cmFuc2xhdGUoKSgoeyB0LCBkYXRlLCBhdXRob3IgfSkgPT4ge1xuICBjb25zdCBrZXkgPSBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcik7XG4gIGlmIChrZXkpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmREYXRlQ29udGFpbmVyPnt0KGB3b3JrZmxvdy53b3JrZmxvd0NhcmQuJHtrZXl9YCwgeyBkYXRlLCBhdXRob3IgfSl9PC9DYXJkRGF0ZUNvbnRhaW5lcj5cbiAgICApO1xuICB9XG59KTtcblxuZnVuY3Rpb24gV29ya2Zsb3dDYXJkKHtcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB0aXRsZSxcbiAgYXV0aG9yTGFzdENoYW5nZSxcbiAgYm9keSxcbiAgaXNNb2RpZmljYXRpb24sXG4gIGVkaXRMaW5rLFxuICB0aW1lc3RhbXAsXG4gIG9uRGVsZXRlLFxuICBhbGxvd1B1Ymxpc2gsXG4gIGNhblB1Ymxpc2gsXG4gIG9uUHVibGlzaCxcbiAgcG9zdEF1dGhvcixcbiAgdCxcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8V29ya2Zsb3dDYXJkQ29udGFpbmVyPlxuICAgICAgPFdvcmtmbG93TGluayB0bz17ZWRpdExpbmt9PlxuICAgICAgICA8Q2FyZENvbGxlY3Rpb24+e2NvbGxlY3Rpb25MYWJlbH08L0NhcmRDb2xsZWN0aW9uPlxuICAgICAgICB7cG9zdEF1dGhvcn1cbiAgICAgICAgPENhcmRUaXRsZT57dGl0bGV9PC9DYXJkVGl0bGU+XG4gICAgICAgIHsodGltZXN0YW1wIHx8IGF1dGhvckxhc3RDaGFuZ2UpICYmIDxDYXJkRGF0ZSBkYXRlPXt0aW1lc3RhbXB9IGF1dGhvcj17YXV0aG9yTGFzdENoYW5nZX0gLz59XG4gICAgICAgIDxDYXJkQm9keT57Ym9keX08L0NhcmRCb2R5PlxuICAgICAgPC9Xb3JrZmxvd0xpbms+XG4gICAgICA8Q2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICAgICAgPERlbGV0ZUJ1dHRvbiBvbkNsaWNrPXtvbkRlbGV0ZX0+XG4gICAgICAgICAge2lzTW9kaWZpY2F0aW9uXG4gICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5kZWxldGVDaGFuZ2VzJylcbiAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZU5ld0VudHJ5Jyl9XG4gICAgICAgIDwvRGVsZXRlQnV0dG9uPlxuICAgICAgICB7YWxsb3dQdWJsaXNoICYmIChcbiAgICAgICAgICA8UHVibGlzaEJ1dHRvbiBkaXNhYmxlZD17IWNhblB1Ymxpc2h9IG9uQ2xpY2s9e29uUHVibGlzaH0+XG4gICAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgICAgPyB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQucHVibGlzaENoYW5nZXMnKVxuICAgICAgICAgICAgICA6IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoTmV3RW50cnknKX1cbiAgICAgICAgICA8L1B1Ymxpc2hCdXR0b24+XG4gICAgICAgICl9XG4gICAgICA8L0NhcmRCdXR0b25Db250YWluZXI+XG4gICAgPC9Xb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICk7XG59XG5cbldvcmtmbG93Q2FyZC5wcm9wVHlwZXMgPSB7XG4gIGNvbGxlY3Rpb25MYWJlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYXV0aG9yTGFzdENoYW5nZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYm9keTogUHJvcFR5cGVzLnN0cmluZyxcbiAgaXNNb2RpZmljYXRpb246IFByb3BUeXBlcy5ib29sLFxuICBlZGl0TGluazogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0aW1lc3RhbXA6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgb25EZWxldGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGFsbG93UHVibGlzaDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2FuUHVibGlzaDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgb25QdWJsaXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwb3N0QXV0aG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgdHJhbnNsYXRlKCkoV29ya2Zsb3dDYXJkKTtcbiJdfQ== */",
    toString: _EMOTION_STRINGIFIED_CSS_ERROR__
  },
  button: /*#__PURE__*/(0, _react2.css)(_decapCmsUiDefault.buttons.button, ";width:auto;flex:1 0 0;font-size:13px;padding:6px 0;;label:button;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjYSIsImZpbGUiOiIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Xb3JrZmxvdy9Xb3JrZmxvd0NhcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IHRyYW5zbGF0ZSB9IGZyb20gJ3JlYWN0LXBvbHlnbG90JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IGNvbXBvbmVudHMsIGNvbG9ycywgY29sb3JzUmF3LCB0cmFuc2l0aW9ucywgYnV0dG9ucyB9IGZyb20gJ2RlY2FwLWNtcy11aS1kZWZhdWx0JztcblxuY29uc3Qgc3R5bGVzID0ge1xuICB0ZXh0OiBjc3NgXG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICBgLFxuICBidXR0b246IGNzc2BcbiAgICAke2J1dHRvbnMuYnV0dG9ufTtcbiAgICB3aWR0aDogYXV0bztcbiAgICBmbGV4OiAxIDAgMDtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgcGFkZGluZzogNnB4IDA7XG4gIGAsXG59O1xuXG5jb25zdCBXb3JrZmxvd0xpbmsgPSBzdHlsZWQoTGluaylgXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwIDE4cHggMThweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbmA7XG5cbmNvbnN0IENhcmRDb2xsZWN0aW9uID0gc3R5bGVkLmRpdmBcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tdG9wOiAxMnB4O1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbmA7XG5cbmNvbnN0IENhcmRUaXRsZSA9IHN0eWxlZC5oMmBcbiAgbWFyZ2luOiAyOHB4IDAgMDtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMZWFkfTtcbmA7XG5cbmNvbnN0IENhcmREYXRlQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtzdHlsZXMudGV4dH07XG5gO1xuXG5jb25zdCBDYXJkQm9keSA9IHN0eWxlZC5wYFxuICAke3N0eWxlcy50ZXh0fTtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHR9O1xuICBtYXJnaW46IDI0cHggMCAwO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICBoeXBoZW5zOiBhdXRvO1xuYDtcblxuY29uc3QgQ2FyZEJ1dHRvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmZvcmVncm91bmR9O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEycHggMThweDtcbiAgZGlzcGxheTogZmxleDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAke3RyYW5zaXRpb25zLm1haW59O1xuICBjdXJzb3I6IHBvaW50ZXI7XG5gO1xuXG5jb25zdCBEZWxldGVCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke3N0eWxlcy5idXR0b259O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy5yZWRMaWdodH07XG4gIGNvbG9yOiAke2NvbG9yc1Jhdy5yZWR9O1xuICBtYXJnaW4tcmlnaHQ6IDZweDtcbmA7XG5cbmNvbnN0IFB1Ymxpc2hCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAke3N0eWxlcy5idXR0b259O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yc1Jhdy50ZWFsfTtcbiAgY29sb3I6ICR7Y29sb3JzLnRleHRMaWdodH07XG4gIG1hcmdpbi1sZWZ0OiA2cHg7XG5cbiAgJltkaXNhYmxlZF0ge1xuICAgICR7YnV0dG9ucy5kaXNhYmxlZH07XG4gIH1cbmA7XG5cbmNvbnN0IFdvcmtmbG93Q2FyZENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICR7Y29tcG9uZW50cy5jYXJkfTtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICY6aG92ZXIgJHtDYXJkQnV0dG9uQ29udGFpbmVyfSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuYDtcblxuZnVuY3Rpb24gbGFzdENoYW5nZVBocmFzZUtleShkYXRlLCBhdXRob3IpIHtcbiAgaWYgKGRhdGUgJiYgYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlJztcbiAgfSBlbHNlIGlmIChkYXRlKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9BdXRob3InO1xuICB9IGVsc2UgaWYgKGF1dGhvcikge1xuICAgIHJldHVybiAnbGFzdENoYW5nZU5vRGF0ZSc7XG4gIH1cbn1cblxuY29uc3QgQ2FyZERhdGUgPSB0cmFuc2xhdGUoKSgoeyB0LCBkYXRlLCBhdXRob3IgfSkgPT4ge1xuICBjb25zdCBrZXkgPSBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcik7XG4gIGlmIChrZXkpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPENhcmREYXRlQ29udGFpbmVyPnt0KGB3b3JrZmxvdy53b3JrZmxvd0NhcmQuJHtrZXl9YCwgeyBkYXRlLCBhdXRob3IgfSl9PC9DYXJkRGF0ZUNvbnRhaW5lcj5cbiAgICApO1xuICB9XG59KTtcblxuZnVuY3Rpb24gV29ya2Zsb3dDYXJkKHtcbiAgY29sbGVjdGlvbkxhYmVsLFxuICB0aXRsZSxcbiAgYXV0aG9yTGFzdENoYW5nZSxcbiAgYm9keSxcbiAgaXNNb2RpZmljYXRpb24sXG4gIGVkaXRMaW5rLFxuICB0aW1lc3RhbXAsXG4gIG9uRGVsZXRlLFxuICBhbGxvd1B1Ymxpc2gsXG4gIGNhblB1Ymxpc2gsXG4gIG9uUHVibGlzaCxcbiAgcG9zdEF1dGhvcixcbiAgdCxcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8V29ya2Zsb3dDYXJkQ29udGFpbmVyPlxuICAgICAgPFdvcmtmbG93TGluayB0bz17ZWRpdExpbmt9PlxuICAgICAgICA8Q2FyZENvbGxlY3Rpb24+e2NvbGxlY3Rpb25MYWJlbH08L0NhcmRDb2xsZWN0aW9uPlxuICAgICAgICB7cG9zdEF1dGhvcn1cbiAgICAgICAgPENhcmRUaXRsZT57dGl0bGV9PC9DYXJkVGl0bGU+XG4gICAgICAgIHsodGltZXN0YW1wIHx8IGF1dGhvckxhc3RDaGFuZ2UpICYmIDxDYXJkRGF0ZSBkYXRlPXt0aW1lc3RhbXB9IGF1dGhvcj17YXV0aG9yTGFzdENoYW5nZX0gLz59XG4gICAgICAgIDxDYXJkQm9keT57Ym9keX08L0NhcmRCb2R5PlxuICAgICAgPC9Xb3JrZmxvd0xpbms+XG4gICAgICA8Q2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICAgICAgPERlbGV0ZUJ1dHRvbiBvbkNsaWNrPXtvbkRlbGV0ZX0+XG4gICAgICAgICAge2lzTW9kaWZpY2F0aW9uXG4gICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5kZWxldGVDaGFuZ2VzJylcbiAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZU5ld0VudHJ5Jyl9XG4gICAgICAgIDwvRGVsZXRlQnV0dG9uPlxuICAgICAgICB7YWxsb3dQdWJsaXNoICYmIChcbiAgICAgICAgICA8UHVibGlzaEJ1dHRvbiBkaXNhYmxlZD17IWNhblB1Ymxpc2h9IG9uQ2xpY2s9e29uUHVibGlzaH0+XG4gICAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgICAgPyB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQucHVibGlzaENoYW5nZXMnKVxuICAgICAgICAgICAgICA6IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoTmV3RW50cnknKX1cbiAgICAgICAgICA8L1B1Ymxpc2hCdXR0b24+XG4gICAgICAgICl9XG4gICAgICA8L0NhcmRCdXR0b25Db250YWluZXI+XG4gICAgPC9Xb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICk7XG59XG5cbldvcmtmbG93Q2FyZC5wcm9wVHlwZXMgPSB7XG4gIGNvbGxlY3Rpb25MYWJlbDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYXV0aG9yTGFzdENoYW5nZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgYm9keTogUHJvcFR5cGVzLnN0cmluZyxcbiAgaXNNb2RpZmljYXRpb246IFByb3BUeXBlcy5ib29sLFxuICBlZGl0TGluazogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB0aW1lc3RhbXA6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgb25EZWxldGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGFsbG93UHVibGlzaDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2FuUHVibGlzaDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgb25QdWJsaXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwb3N0QXV0aG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgdHJhbnNsYXRlKCkoV29ya2Zsb3dDYXJkKTtcbiJdfQ== */"))
};
const WorkflowLink = /*#__PURE__*/(0, _base.default)(_reactRouterDom.Link, {
  target: "ewffzyy8",
  label: "WorkflowLink"
})(process.env.NODE_ENV === "production" ? {
  name: "am2158",
  styles: "display:block;padding:0 18px 18px;height:200px;overflow:hidden"
} : {
  name: "am2158",
  styles: "display:block;padding:0 18px 18px;height:200px;overflow:hidden",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1QmlDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const CardCollection = /*#__PURE__*/(0, _base.default)("div", {
  target: "ewffzyy7",
  label: "CardCollection"
})("font-size:14px;color:", _decapCmsUiDefault.colors.textLead, ";text-transform:uppercase;margin-top:12px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QmlDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const CardTitle = /*#__PURE__*/(0, _base.default)("h2", {
  target: "ewffzyy6",
  label: "CardTitle"
})("margin:28px 0 0;color:", _decapCmsUiDefault.colors.textLead, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QzJCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const CardDateContainer = /*#__PURE__*/(0, _base.default)("div", {
  target: "ewffzyy5",
  label: "CardDateContainer"
})(styles.text, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q29DIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const CardBody = /*#__PURE__*/(0, _base.default)("p", {
  target: "ewffzyy4",
  label: "CardBody"
})(styles.text, ";color:", _decapCmsUiDefault.colors.text, ";margin:24px 0 0;overflow-wrap:break-word;word-break:break-word;hyphens:auto;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRHlCIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const CardButtonContainer = /*#__PURE__*/(0, _base.default)("div", {
  target: "ewffzyy3",
  label: "CardButtonContainer"
})("background-color:", _decapCmsUiDefault.colors.foreground, ";position:absolute;bottom:0;width:100%;padding:12px 18px;display:flex;opacity:0;transition:opacity ", _decapCmsUiDefault.transitions.main, ";cursor:pointer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRHNDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const DeleteButton = /*#__PURE__*/(0, _base.default)("button", {
  target: "ewffzyy2",
  label: "DeleteButton"
})(styles.button, ";background-color:", _decapCmsUiDefault.colorsRaw.redLight, ";color:", _decapCmsUiDefault.colorsRaw.red, ";margin-right:6px;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRWtDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const PublishButton = /*#__PURE__*/(0, _base.default)("button", {
  target: "ewffzyy1",
  label: "PublishButton"
})(styles.button, ";background-color:", _decapCmsUiDefault.colorsRaw.teal, ";color:", _decapCmsUiDefault.colors.textLight, ";margin-left:6px;&[disabled]{", _decapCmsUiDefault.buttons.disabled, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RW1DIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
const WorkflowCardContainer = /*#__PURE__*/(0, _base.default)("div", {
  target: "ewffzyy0",
  label: "WorkflowCardContainer"
})(_decapCmsUiDefault.components.card, ";margin-bottom:24px;position:relative;overflow:hidden;&:hover ", CardButtonContainer, "{opacity:1;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RndDIiwiZmlsZSI6Ii4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1dvcmtmbG93L1dvcmtmbG93Q2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAncmVhY3QtcG9seWdsb3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgY29tcG9uZW50cywgY29sb3JzLCBjb2xvcnNSYXcsIHRyYW5zaXRpb25zLCBidXR0b25zIH0gZnJvbSAnZGVjYXAtY21zLXVpLWRlZmF1bHQnO1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHRleHQ6IGNzc2BcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIGAsXG4gIGJ1dHRvbjogY3NzYFxuICAgICR7YnV0dG9ucy5idXR0b259O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IDEgMCAwO1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBwYWRkaW5nOiA2cHggMDtcbiAgYCxcbn07XG5cbmNvbnN0IFdvcmtmbG93TGluayA9IHN0eWxlZChMaW5rKWBcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcblxuY29uc3QgQ2FyZENvbGxlY3Rpb24gPSBzdHlsZWQuZGl2YFxuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAke2NvbG9ycy50ZXh0TGVhZH07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuYDtcblxuY29uc3QgQ2FyZFRpdGxlID0gc3R5bGVkLmgyYFxuICBtYXJnaW46IDI4cHggMCAwO1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExlYWR9O1xuYDtcblxuY29uc3QgQ2FyZERhdGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAke3N0eWxlcy50ZXh0fTtcbmA7XG5cbmNvbnN0IENhcmRCb2R5ID0gc3R5bGVkLnBgXG4gICR7c3R5bGVzLnRleHR9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dH07XG4gIG1hcmdpbjogMjRweCAwIDA7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIGh5cGhlbnM6IGF1dG87XG5gO1xuXG5jb25zdCBDYXJkQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZm9yZWdyb3VuZH07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTJweCAxOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5ICR7dHJhbnNpdGlvbnMubWFpbn07XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnJlZExpZ2h0fTtcbiAgY29sb3I6ICR7Y29sb3JzUmF3LnJlZH07XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuYDtcblxuY29uc3QgUHVibGlzaEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7c3R5bGVzLmJ1dHRvbn07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzUmF3LnRlYWx9O1xuICBjb2xvcjogJHtjb2xvcnMudGV4dExpZ2h0fTtcbiAgbWFyZ2luLWxlZnQ6IDZweDtcblxuICAmW2Rpc2FibGVkXSB7XG4gICAgJHtidXR0b25zLmRpc2FibGVkfTtcbiAgfVxuYDtcblxuY29uc3QgV29ya2Zsb3dDYXJkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHtjb21wb25lbnRzLmNhcmR9O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJjpob3ZlciAke0NhcmRCdXR0b25Db250YWluZXJ9IHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuXG5mdW5jdGlvbiBsYXN0Q2hhbmdlUGhyYXNlS2V5KGRhdGUsIGF1dGhvcikge1xuICBpZiAoZGF0ZSAmJiBhdXRob3IpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2UnO1xuICB9IGVsc2UgaWYgKGRhdGUpIHtcbiAgICByZXR1cm4gJ2xhc3RDaGFuZ2VOb0F1dGhvcic7XG4gIH0gZWxzZSBpZiAoYXV0aG9yKSB7XG4gICAgcmV0dXJuICdsYXN0Q2hhbmdlTm9EYXRlJztcbiAgfVxufVxuXG5jb25zdCBDYXJkRGF0ZSA9IHRyYW5zbGF0ZSgpKCh7IHQsIGRhdGUsIGF1dGhvciB9KSA9PiB7XG4gIGNvbnN0IGtleSA9IGxhc3RDaGFuZ2VQaHJhc2VLZXkoZGF0ZSwgYXV0aG9yKTtcbiAgaWYgKGtleSkge1xuICAgIHJldHVybiAoXG4gICAgICA8Q2FyZERhdGVDb250YWluZXI+e3QoYHdvcmtmbG93LndvcmtmbG93Q2FyZC4ke2tleX1gLCB7IGRhdGUsIGF1dGhvciB9KX08L0NhcmREYXRlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBXb3JrZmxvd0NhcmQoe1xuICBjb2xsZWN0aW9uTGFiZWwsXG4gIHRpdGxlLFxuICBhdXRob3JMYXN0Q2hhbmdlLFxuICBib2R5LFxuICBpc01vZGlmaWNhdGlvbixcbiAgZWRpdExpbmssXG4gIHRpbWVzdGFtcCxcbiAgb25EZWxldGUsXG4gIGFsbG93UHVibGlzaCxcbiAgY2FuUHVibGlzaCxcbiAgb25QdWJsaXNoLFxuICBwb3N0QXV0aG9yLFxuICB0LFxufSkge1xuICByZXR1cm4gKFxuICAgIDxXb3JrZmxvd0NhcmRDb250YWluZXI+XG4gICAgICA8V29ya2Zsb3dMaW5rIHRvPXtlZGl0TGlua30+XG4gICAgICAgIDxDYXJkQ29sbGVjdGlvbj57Y29sbGVjdGlvbkxhYmVsfTwvQ2FyZENvbGxlY3Rpb24+XG4gICAgICAgIHtwb3N0QXV0aG9yfVxuICAgICAgICA8Q2FyZFRpdGxlPnt0aXRsZX08L0NhcmRUaXRsZT5cbiAgICAgICAgeyh0aW1lc3RhbXAgfHwgYXV0aG9yTGFzdENoYW5nZSkgJiYgPENhcmREYXRlIGRhdGU9e3RpbWVzdGFtcH0gYXV0aG9yPXthdXRob3JMYXN0Q2hhbmdlfSAvPn1cbiAgICAgICAgPENhcmRCb2R5Pntib2R5fTwvQ2FyZEJvZHk+XG4gICAgICA8L1dvcmtmbG93TGluaz5cbiAgICAgIDxDYXJkQnV0dG9uQ29udGFpbmVyPlxuICAgICAgICA8RGVsZXRlQnV0dG9uIG9uQ2xpY2s9e29uRGVsZXRlfT5cbiAgICAgICAgICB7aXNNb2RpZmljYXRpb25cbiAgICAgICAgICAgID8gdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLmRlbGV0ZUNoYW5nZXMnKVxuICAgICAgICAgICAgOiB0KCd3b3JrZmxvdy53b3JrZmxvd0NhcmQuZGVsZXRlTmV3RW50cnknKX1cbiAgICAgICAgPC9EZWxldGVCdXR0b24+XG4gICAgICAgIHthbGxvd1B1Ymxpc2ggJiYgKFxuICAgICAgICAgIDxQdWJsaXNoQnV0dG9uIGRpc2FibGVkPXshY2FuUHVibGlzaH0gb25DbGljaz17b25QdWJsaXNofT5cbiAgICAgICAgICAgIHtpc01vZGlmaWNhdGlvblxuICAgICAgICAgICAgICA/IHQoJ3dvcmtmbG93LndvcmtmbG93Q2FyZC5wdWJsaXNoQ2hhbmdlcycpXG4gICAgICAgICAgICAgIDogdCgnd29ya2Zsb3cud29ya2Zsb3dDYXJkLnB1Ymxpc2hOZXdFbnRyeScpfVxuICAgICAgICAgIDwvUHVibGlzaEJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvQ2FyZEJ1dHRvbkNvbnRhaW5lcj5cbiAgICA8L1dvcmtmbG93Q2FyZENvbnRhaW5lcj5cbiAgKTtcbn1cblxuV29ya2Zsb3dDYXJkLnByb3BUeXBlcyA9IHtcbiAgY29sbGVjdGlvbkxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBhdXRob3JMYXN0Q2hhbmdlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBib2R5OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpc01vZGlmaWNhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG4gIGVkaXRMaW5rOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRpbWVzdGFtcDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvbkRlbGV0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWxsb3dQdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjYW5QdWJsaXNoOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBvblB1Ymxpc2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBvc3RBdXRob3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCB0cmFuc2xhdGUoKShXb3JrZmxvd0NhcmQpO1xuIl19 */"));
function lastChangePhraseKey(date, author) {
  if (date && author) {
    return 'lastChange';
  } else if (date) {
    return 'lastChangeNoAuthor';
  } else if (author) {
    return 'lastChangeNoDate';
  }
}
const CardDate = (0, _reactPolyglot.translate)()(({
  t,
  date,
  author
}) => {
  const key = lastChangePhraseKey(date, author);
  if (key) {
    return (0, _react2.jsx)(CardDateContainer, null, t(`workflow.workflowCard.${key}`, {
      date,
      author
    }));
  }
});
function WorkflowCard({
  collectionLabel,
  title,
  authorLastChange,
  body,
  isModification,
  editLink,
  timestamp,
  onDelete,
  allowPublish,
  canPublish,
  onPublish,
  postAuthor,
  t
}) {
  return (0, _react2.jsx)(WorkflowCardContainer, null, (0, _react2.jsx)(WorkflowLink, {
    to: editLink
  }, (0, _react2.jsx)(CardCollection, null, collectionLabel), postAuthor, (0, _react2.jsx)(CardTitle, null, title), (timestamp || authorLastChange) && (0, _react2.jsx)(CardDate, {
    date: timestamp,
    author: authorLastChange
  }), (0, _react2.jsx)(CardBody, null, body)), (0, _react2.jsx)(CardButtonContainer, null, (0, _react2.jsx)(DeleteButton, {
    onClick: onDelete
  }, isModification ? t('workflow.workflowCard.deleteChanges') : t('workflow.workflowCard.deleteNewEntry')), allowPublish && (0, _react2.jsx)(PublishButton, {
    disabled: !canPublish,
    onClick: onPublish
  }, isModification ? t('workflow.workflowCard.publishChanges') : t('workflow.workflowCard.publishNewEntry'))));
}
WorkflowCard.propTypes = {
  collectionLabel: _propTypes.default.string.isRequired,
  title: _propTypes.default.string,
  authorLastChange: _propTypes.default.string,
  body: _propTypes.default.string,
  isModification: _propTypes.default.bool,
  editLink: _propTypes.default.string.isRequired,
  timestamp: _propTypes.default.string.isRequired,
  onDelete: _propTypes.default.func.isRequired,
  allowPublish: _propTypes.default.bool.isRequired,
  canPublish: _propTypes.default.bool.isRequired,
  onPublish: _propTypes.default.func.isRequired,
  postAuthor: _propTypes.default.string,
  t: _propTypes.default.func.isRequired
};
var _default = exports.default = (0, _reactPolyglot.translate)()(WorkflowCard);